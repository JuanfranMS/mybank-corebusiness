package com.mybank.corebusiness.api.transaction;

import java.io.Serializable;

/**
 * Account transaction.
 * Bank account transaction request.
 * A transaction refers to an order for modification of the current amount of an account.
 */
@SuppressWarnings("serial")
public class Transaction implements Serializable {
	
	/** Unique identifier of a transaction. To be provided or generated by the system. */
	private String reference;
	
	/** Unique public identifier of the bank account the transaction applies on. */
	private String accountIban;
	
	/** Time-stamp when the transaction takes place (milliseconds from epoch). */
	private Long dateEpoch;
	
	/** Amount of monetary units (in cents) the transaction modifies the account. 
	 *  A positive value means addition (credit), a negative value means subtraction (debit). */
	private long amount;
	
	/** Amount of monetary units (in cents) deduced from the amount. Always positive. */
	private Long fee;
	
	/** Sentence describing the purpose of the transaction. */
	private String description;

    public String getReference() {
        return reference;
    }

    public void setReference(String reference) {
        this.reference = reference;
    }

    public String getAccountIban() {
        return accountIban;
    }

    public void setAccountIban(String accountIban) {
        this.accountIban = accountIban;
    }

    public Long getDateEpoch() {
        return dateEpoch;
    }

    public void setDateEpoch(Long dateEpoch) {
        this.dateEpoch = dateEpoch;
    }

    public long getAmount() {
        return amount;
    }

    public void setAmount(long amount) {
        this.amount = amount;
    }

    public Long getFee() {
        return fee;
    }

    public void setFee(Long fee) {
        this.fee = fee;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }
}
